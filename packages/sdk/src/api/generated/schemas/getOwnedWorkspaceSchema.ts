/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type {
  GetOwnedWorkspace200,
  GetOwnedWorkspace400,
  GetOwnedWorkspace401,
  GetOwnedWorkspace403,
  GetOwnedWorkspace404,
  GetOwnedWorkspace429,
  GetOwnedWorkspace500,
  GetOwnedWorkspaceQueryResponse,
} from '../types/GetOwnedWorkspace'
import type { ToZod } from '@kubb/plugin-zod/utils'
import { z } from 'zod'

/**
 * @description Success
 */
export const getOwnedWorkspace200Schema = z
  .object({
    workspace: z.object({
      id: z.string(),
      active: z.boolean(),
      name: z.string(),
      slug: z.string(),
      logoUrl: z.string().url().nullable(),
      ownerId: z.string(),
      createdAt: z.string().datetime(),
      updatedAt: z.string().datetime(),
    }),
  })
  .describe('Success') as unknown as ToZod<GetOwnedWorkspace200>

export type GetOwnedWorkspace200Schema = GetOwnedWorkspace200

/**
 * @description Bad Request. Usually due to missing parameters, or invalid parameters.
 */
export const getOwnedWorkspace400Schema = z
  .object({
    code: z.string(),
    message: z.string(),
    errors: z
      .array(
        z
          .object({
            code: z.string(),
            message: z.string(),
            path: z.array(z.union([z.string(), z.number()])),
          })
          .catchall(z.any()),
      )
      .describe('Validation errors')
      .optional(),
  })
  .describe(
    'Bad Request. Usually due to missing parameters, or invalid parameters.',
  ) as unknown as ToZod<GetOwnedWorkspace400>

export type GetOwnedWorkspace400Schema = GetOwnedWorkspace400

/**
 * @description Unauthorized. Due to missing or invalid authentication.
 */
export const getOwnedWorkspace401Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Unauthorized. Due to missing or invalid authentication.',
  ) as unknown as ToZod<GetOwnedWorkspace401>

export type GetOwnedWorkspace401Schema = GetOwnedWorkspace401

/**
 * @description Forbidden. You do not have permission to access this resource or to perform this action.
 */
export const getOwnedWorkspace403Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Forbidden. You do not have permission to access this resource or to perform this action.',
  ) as unknown as ToZod<GetOwnedWorkspace403>

export type GetOwnedWorkspace403Schema = GetOwnedWorkspace403

/**
 * @description Not Found. The requested resource was not found.
 */
export const getOwnedWorkspace404Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Not Found. The requested resource was not found.',
  ) as unknown as ToZod<GetOwnedWorkspace404>

export type GetOwnedWorkspace404Schema = GetOwnedWorkspace404

/**
 * @description Too Many Requests. You have exceeded the rate limit. Try again later.
 */
export const getOwnedWorkspace429Schema = z
  .object({
    message: z.string(),
  })
  .describe(
    'Too Many Requests. You have exceeded the rate limit. Try again later.',
  ) as unknown as ToZod<GetOwnedWorkspace429>

export type GetOwnedWorkspace429Schema = GetOwnedWorkspace429

/**
 * @description Internal Server Error. This is a problem with the server that you cannot fix.
 */
export const getOwnedWorkspace500Schema = z
  .object({
    code: z.string(),
    message: z.string(),
  })
  .describe(
    'Internal Server Error. This is a problem with the server that you cannot fix.',
  ) as unknown as ToZod<GetOwnedWorkspace500>

export type GetOwnedWorkspace500Schema = GetOwnedWorkspace500

export const getOwnedWorkspaceQueryResponseSchema = z.lazy(
  () => getOwnedWorkspace200Schema,
) as unknown as ToZod<GetOwnedWorkspaceQueryResponse>

export type GetOwnedWorkspaceQueryResponseSchema =
  GetOwnedWorkspaceQueryResponse
